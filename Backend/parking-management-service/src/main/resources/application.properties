spring.application.name=parking-management-service
server.port=8081

# Database configurations
spring.datasource.url=jdbc:postgresql://ep-rough-mountain-a9rd0n9d-pooler.gwc.azure.neon.tech/neondb?sslmode=require
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=neondb_owner
spring.datasource.password=npg_olObVErh02Cp
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JPA/Hibernate configurations
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Swagger/OpenAPI configurations 
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.packages-to-scan=com.example.parking_management_service.parking_info.controller
springdoc.pathsToMatch=/api/**
springdoc.default-produces-media-type=application/json
springdoc.model-converters.pageable-converter.enabled=true
server.forward-headers-strategy=framework


# Security configurations (temporarily disabled)
spring.security.user.name=admin
spring.security.user.password=admin

# Eureka Server Configuration for Docker
eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.preferIpAddress=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.metadata-map.instanceId=${spring.application.name}:${server.port}
