{"ast":null,"code":"// services/apiService.js\nimport axios from 'axios';\n\n// Servis URL'leri\nconst AUTH_SERVICE_URL = 'http://localhost:8050/api';\nconst PARKING_SERVICE_URL = 'http://localhost:8081/api';\n\n// API istekleri için interceptor\naxios.interceptors.request.use(config => {\n  console.log('API İsteği:', config.method.toUpperCase(), config.url, config.data);\n  // Token yerine kullanıcı bilgilerini header'a ekle\n  const userId = localStorage.getItem('userId');\n  const username = localStorage.getItem('username');\n  if (userId && username) {\n    config.headers['X-User-Id'] = userId;\n    config.headers['X-Username'] = username;\n  }\n  return config;\n}, error => {\n  console.error('API İstek hatası:', error);\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  console.log('API Yanıtı:', response.status, response.data);\n  return response;\n}, error => {\n  console.error('API Yanıt hatası:', error.response ? `${error.response.status} - ${JSON.stringify(error.response.data)}` : error.message);\n  return Promise.reject(error);\n});\n\n// Auth API çağrıları\nexport const signIn = credentials => {\n  return axios.post(`${AUTH_SERVICE_URL}/auth/signin`, credentials);\n};\nexport const signUp = userData => {\n  return axios.post(`${AUTH_SERVICE_URL}/auth/signup`, userData);\n};\n\n// Otopark API çağrıları\nexport const addParking = parkingData => {\n  return axios.post(`${PARKING_SERVICE_URL}/admin/parkings`, parkingData, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const getParkings = () => {\n  return axios.get(`${PARKING_SERVICE_URL}/parkings`);\n};\nexport const getParkingById = id => {\n  return axios.get(`${PARKING_SERVICE_URL}/parkings/${id}`);\n};\nexport const updateParking = (id, parkingData) => {\n  return axios.put(`${PARKING_SERVICE_URL}/admin/parkings/${id}`, parkingData);\n};\nexport const deleteParking = id => {\n  console.log(`Otopark siliniyor, ID: ${id}`);\n  return axios.delete(`${PARKING_SERVICE_URL}/admin/parkings/${id}`);\n};\n\n// Layout API çağrıları\nexport const getParkingLayout = parkingId => {\n  return axios.get(`${PARKING_SERVICE_URL}/${parkingId}/layout`);\n};\nexport const updateParkingLayout = (parkingId, layoutData) => {\n  return axios.post(`${PARKING_SERVICE_URL}/${parkingId}/layout`, layoutData);\n};\nexport const clearParkingLayout = parkingId => {\n  return axios.put(`${PARKING_SERVICE_URL}/${parkingId}/clear-layout`);\n};","map":{"version":3,"names":["axios","AUTH_SERVICE_URL","PARKING_SERVICE_URL","interceptors","request","use","config","console","log","method","toUpperCase","url","data","userId","localStorage","getItem","username","headers","error","Promise","reject","response","status","JSON","stringify","message","signIn","credentials","post","signUp","userData","addParking","parkingData","getParkings","get","getParkingById","id","updateParking","put","deleteParking","delete","getParkingLayout","parkingId","updateParkingLayout","layoutData","clearParkingLayout"],"sources":["C:/Users/serha/Smart-Parking-System/WebPanel/admin-panel/src/services/apiService.js"],"sourcesContent":["// services/apiService.js\nimport axios from 'axios';\n\n// Servis URL'leri\nconst AUTH_SERVICE_URL = 'http://localhost:8050/api';\nconst PARKING_SERVICE_URL = 'http://localhost:8081/api';\n\n// API istekleri için interceptor\naxios.interceptors.request.use(\n  config => {\n    console.log('API İsteği:', config.method.toUpperCase(), config.url, config.data);\n    // Token yerine kullanıcı bilgilerini header'a ekle\n    const userId = localStorage.getItem('userId');\n    const username = localStorage.getItem('username');\n    \n    if (userId && username) {\n      config.headers['X-User-Id'] = userId;\n      config.headers['X-Username'] = username;\n    }\n    \n    return config;\n  },\n  error => {\n    console.error('API İstek hatası:', error);\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  response => {\n    console.log('API Yanıtı:', response.status, response.data);\n    return response;\n  },\n  error => {\n    console.error('API Yanıt hatası:', \n      error.response ? \n      `${error.response.status} - ${JSON.stringify(error.response.data)}` : \n      error.message\n    );\n    return Promise.reject(error);\n  }\n);\n\n// Auth API çağrıları\nexport const signIn = (credentials) => {\n  return axios.post(`${AUTH_SERVICE_URL}/auth/signin`, credentials);\n};\n\nexport const signUp = (userData) => {\n  return axios.post(`${AUTH_SERVICE_URL}/auth/signup`, userData);\n};\n\n// Otopark API çağrıları\nexport const addParking = (parkingData) => {\n  return axios.post(`${PARKING_SERVICE_URL}/admin/parkings`, parkingData, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\n\nexport const getParkings = () => {\n  return axios.get(`${PARKING_SERVICE_URL}/parkings`);\n};\n\nexport const getParkingById = (id) => {\n  return axios.get(`${PARKING_SERVICE_URL}/parkings/${id}`);\n};\n\nexport const updateParking = (id, parkingData) => {\n  return axios.put(`${PARKING_SERVICE_URL}/admin/parkings/${id}`, parkingData);\n};\n\nexport const deleteParking = (id) => {\n  console.log(`Otopark siliniyor, ID: ${id}`);\n  return axios.delete(`${PARKING_SERVICE_URL}/admin/parkings/${id}`);\n};\n\n// Layout API çağrıları\nexport const getParkingLayout = (parkingId) => {\n  return axios.get(`${PARKING_SERVICE_URL}/${parkingId}/layout`);\n};\n\nexport const updateParkingLayout = (parkingId, layoutData) => {\n  return axios.post(`${PARKING_SERVICE_URL}/${parkingId}/layout`, layoutData);\n};\n\nexport const clearParkingLayout = (parkingId) => {\n  return axios.put(`${PARKING_SERVICE_URL}/${parkingId}/clear-layout`);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}