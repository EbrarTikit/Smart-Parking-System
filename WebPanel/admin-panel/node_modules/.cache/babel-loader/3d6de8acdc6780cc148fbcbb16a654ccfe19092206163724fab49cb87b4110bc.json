{"ast":null,"code":"// services/apiService.js\nimport axios from 'axios';\n\n// Her servis için ayrı URL tanımlayın\nconst USER_SERVICE_URL = 'http://localhost:8050/api';\nconst PARKING_SERVICE_URL = 'http://localhost:8081/api';\n\n// Axios instance'ları oluşturun\nconst createAxiosInstance = baseURL => {\n  return axios.create({\n    baseURL,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\nconst userApi = createAxiosInstance(USER_SERVICE_URL);\nconst parkingApi = createAxiosInstance(PARKING_SERVICE_URL);\n\n// User Service API çağrıları\nexport const signIn = credentials => {\n  return userApi.post('/auth/signin', credentials);\n};\nexport const signUp = userData => {\n  return userApi.post('/auth/signup', userData);\n};\n\n// Parking Service API çağrıları\nexport const addParking = parkingData => {\n  return parkingApi.post('/admin/parkings', parkingData);\n};\nexport const getParkings = () => {\n  return parkingApi.get('/parkings');\n};\nexport const getParkingById = id => {\n  return parkingApi.get(`/parkings/${id}`);\n};\nexport const updateParking = (id, parkingData) => {\n  return parkingApi.put(`/admin/parkings/${id}`, parkingData);\n};\nexport const deleteParking = id => {\n  return parkingApi.delete(`/admin/parkings/${id}`);\n};\n\n// Layout API çağrıları\nexport const getParkingLayout = parkingId => {\n  return parkingApi.get(`/${parkingId}/layout`);\n};\nexport const updateParkingLayout = (parkingId, layoutData) => {\n  return parkingApi.post(`/${parkingId}/layout`, layoutData);\n};\nexport const clearParkingLayout = parkingId => {\n  return parkingApi.put(`/${parkingId}/clear-layout`);\n};","map":{"version":3,"names":["axios","USER_SERVICE_URL","PARKING_SERVICE_URL","createAxiosInstance","baseURL","create","headers","userApi","parkingApi","signIn","credentials","post","signUp","userData","addParking","parkingData","getParkings","get","getParkingById","id","updateParking","put","deleteParking","delete","getParkingLayout","parkingId","updateParkingLayout","layoutData","clearParkingLayout"],"sources":["C:/Users/serha/Smart-Parking-System/WebPanel/admin-panel/src/services/apiService.js"],"sourcesContent":["// services/apiService.js\r\nimport axios from 'axios';\r\n\r\n// Her servis için ayrı URL tanımlayın\r\nconst USER_SERVICE_URL = 'http://localhost:8050/api';\r\nconst PARKING_SERVICE_URL = 'http://localhost:8081/api';\r\n\r\n// Axios instance'ları oluşturun\r\nconst createAxiosInstance = (baseURL) => {\r\n  return axios.create({\r\n    baseURL,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n};\r\n\r\nconst userApi = createAxiosInstance(USER_SERVICE_URL);\r\nconst parkingApi = createAxiosInstance(PARKING_SERVICE_URL);\r\n\r\n// User Service API çağrıları\r\nexport const signIn = (credentials) => {\r\n  return userApi.post('/auth/signin', credentials);\r\n};\r\n\r\nexport const signUp = (userData) => {\r\n  return userApi.post('/auth/signup', userData);\r\n};\r\n\r\n// Parking Service API çağrıları\r\nexport const addParking = (parkingData) => {\r\n  return parkingApi.post('/admin/parkings', parkingData);\r\n};\r\n\r\nexport const getParkings = () => {\r\n  return parkingApi.get('/parkings');\r\n};\r\n\r\nexport const getParkingById = (id) => {\r\n  return parkingApi.get(`/parkings/${id}`);\r\n};\r\n\r\nexport const updateParking = (id, parkingData) => {\r\n  return parkingApi.put(`/admin/parkings/${id}`, parkingData);\r\n};\r\n\r\nexport const deleteParking = (id) => {\r\n  return parkingApi.delete(`/admin/parkings/${id}`);\r\n};\r\n\r\n// Layout API çağrıları\r\nexport const getParkingLayout = (parkingId) => {\r\n  return parkingApi.get(`/${parkingId}/layout`);\r\n};\r\n\r\nexport const updateParkingLayout = (parkingId, layoutData) => {\r\n  return parkingApi.post(`/${parkingId}/layout`, layoutData);\r\n};\r\n\r\nexport const clearParkingLayout = (parkingId) => {\r\n  return parkingApi.put(`/${parkingId}/clear-layout`);\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,gBAAgB,GAAG,2BAA2B;AACpD,MAAMC,mBAAmB,GAAG,2BAA2B;;AAEvD;AACA,MAAMC,mBAAmB,GAAIC,OAAO,IAAK;EACvC,OAAOJ,KAAK,CAACK,MAAM,CAAC;IAClBD,OAAO;IACPE,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,OAAO,GAAGJ,mBAAmB,CAACF,gBAAgB,CAAC;AACrD,MAAMO,UAAU,GAAGL,mBAAmB,CAACD,mBAAmB,CAAC;;AAE3D;AACA,OAAO,MAAMO,MAAM,GAAIC,WAAW,IAAK;EACrC,OAAOH,OAAO,CAACI,IAAI,CAAC,cAAc,EAAED,WAAW,CAAC;AAClD,CAAC;AAED,OAAO,MAAME,MAAM,GAAIC,QAAQ,IAAK;EAClC,OAAON,OAAO,CAACI,IAAI,CAAC,cAAc,EAAEE,QAAQ,CAAC;AAC/C,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAIC,WAAW,IAAK;EACzC,OAAOP,UAAU,CAACG,IAAI,CAAC,iBAAiB,EAAEI,WAAW,CAAC;AACxD,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAOR,UAAU,CAACS,GAAG,CAAC,WAAW,CAAC;AACpC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIC,EAAE,IAAK;EACpC,OAAOX,UAAU,CAACS,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAACD,EAAE,EAAEJ,WAAW,KAAK;EAChD,OAAOP,UAAU,CAACa,GAAG,CAAC,mBAAmBF,EAAE,EAAE,EAAEJ,WAAW,CAAC;AAC7D,CAAC;AAED,OAAO,MAAMO,aAAa,GAAIH,EAAE,IAAK;EACnC,OAAOX,UAAU,CAACe,MAAM,CAAC,mBAAmBJ,EAAE,EAAE,CAAC;AACnD,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAIC,SAAS,IAAK;EAC7C,OAAOjB,UAAU,CAACS,GAAG,CAAC,IAAIQ,SAAS,SAAS,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CAACD,SAAS,EAAEE,UAAU,KAAK;EAC5D,OAAOnB,UAAU,CAACG,IAAI,CAAC,IAAIc,SAAS,SAAS,EAAEE,UAAU,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIH,SAAS,IAAK;EAC/C,OAAOjB,UAAU,CAACa,GAAG,CAAC,IAAII,SAAS,eAAe,CAAC;AACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}